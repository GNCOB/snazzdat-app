#%RAML 0.8
title: Steroids Data
mediaType: application/json
baseUri: https://rest-api.appgyver.com/v1/

traits:
  - securedBySteroidsApiKey:
      headers:
        steroidsApiKey:
          type: string
          example: exampleapikey
          default: 9369a4ef0c8419a1e66b8ec43dde802b3eb41dcaee9029b88fd542c993415a64
        steroidsAppId:
          type: integer
          example: 1234
          default: 32505

schemas:
  - Sizes: '{"$schema":"http://json-schema.org/schema","title":"Size collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Size representation","properties":{"body_shape_code":{"type":"string"},"bust":{"type":"string"},"chest":{"type":"string"},"createdAt":{"type":"string"},"height":{"type":"string"},"hips":{"type":"string"},"inseam":{"type":"string"},"neck":{"type":"string"},"objectId":{"type":"string"},"sleeve":{"type":"string"},"updatedAt":{"type":"string"},"user":{"type":"object"},"waist":{"type":"string"},"weight":{"type":"string"}},"required":[]}}}}'
  - Size: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Size representation","properties":{"body_shape_code":{"type":"string"},"bust":{"type":"string"},"chest":{"type":"string"},"createdAt":{"type":"string"},"height":{"type":"string"},"hips":{"type":"string"},"inseam":{"type":"string"},"neck":{"type":"string"},"objectId":{"type":"string"},"sleeve":{"type":"string"},"updatedAt":{"type":"string"},"user":{"type":"object"},"waist":{"type":"string"},"weight":{"type":"string"}},"required":[]}'
  - Users: '{"$schema":"http://json-schema.org/schema","title":"User collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical User representation","properties":{"createdAt":{"type":"string"},"email":{"type":"string"},"name":{"type":"string"},"objectId":{"type":"string"},"updatedAt":{"type":"string"},"username":{"type":"string"}},"required":[]}}}}'
  - User: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical User representation","properties":{"createdAt":{"type":"string"},"email":{"type":"string"},"name":{"type":"string"},"objectId":{"type":"string"},"updatedAt":{"type":"string"},"username":{"type":"string"}},"required":[]}'
  - Appointments: '{"$schema":"http://json-schema.org/schema","title":"Appointment collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Appointment representation","properties":{"budget":{"type":"string"},"createdAt":{"type":"string"},"date":{"type":"object"},"notes":{"type":"string"},"objectId":{"type":"string"},"partner":{"type":"object"},"phone_number":{"type":"string"},"updatedAt":{"type":"string"},"user":{"type":"object"}},"required":[]}}}}'
  - Appointment: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Appointment representation","properties":{"budget":{"type":"string"},"createdAt":{"type":"string"},"date":{"type":"object"},"notes":{"type":"string"},"objectId":{"type":"string"},"partner":{"type":"object"},"phone_number":{"type":"string"},"updatedAt":{"type":"string"},"user":{"type":"object"}},"required":[]}'
  - Retailers: '{"$schema":"http://json-schema.org/schema","title":"Retailer collection","type":"object","properties":{"results":{"type":"array","items":{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Retailer representation","properties":{"createdAt":{"type":"string"},"name":{"type":"string"},"objectId":{"type":"string"},"place_id":{"type":"string"},"request_count":{"type":"integer"},"updatedAt":{"type":"string"}},"required":[]}}}}'
  - Retailer: '{"$schema":"http://json-schema.org/schema","type":"object","description":"The canonical Retailer representation","properties":{"createdAt":{"type":"string"},"name":{"type":"string"},"objectId":{"type":"string"},"place_id":{"type":"string"},"request_count":{"type":"integer"},"updatedAt":{"type":"string"}},"required":[]}'

resourceTypes:
  - dolan_db_collection:
      usage: This resourceType should be used for any collection of items
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "collection"
          }
        responses:
          200:
            description: |
              {
                "rootKey": "objects"
              }
            body:
              application/json:
                schema: <<resourcePathName>> # e.g cars
      post:
        description: |
          {
            "action": "create",
            "rootKey": "object"
          }
        body:
          application/json:
            schema: <<resourcePathName | !singularize>>
        responses:
          200:
            description: |
              {
                "rootKey": "object"
              }
            body:
              application/json:
                schema: <<resourcePathName | !singularize>> # e.g. car

  - dolan_db_member:
      usage: This resourceType should be used for any built.io item
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "find"
          }
        responses:
          200:
            description: |
              {
                "rootKey": "object"
              }
            body:
              application/json:
                schema: <<resourcePathName>> # e.g. car
      put:
        description: |
          {
            "action": "update",
            "rootKey": "object"
          }
        body:
          application/json:
            schema: <<resourcePathName | !singularize>>
        responses:
          200:
            description: |
              {
                "rootKey": "object"
              }
            body:
              application/json:
                schema: <<resourcePathName>>
      delete:
        description: |
          {
            "action": "destroy"
          }
        responses:
          200:
      

  - parse_collection:
      usage: This resourceType should be used for any collection of items
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "collection"
          }
        responses:
          200:
            description: |
              {
                "rootKey": "results"
              }
            body:
              application/json:
                schema: <<resourcePathName>> # e.g cars
      post:
        description: |
          {
            "action": "create"
          }
        body:
          application/json:
            schema: <<resourcePathName | !singularize>>
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName | !singularize>> # e.g. car

  - parse_member:
      usage: This resourceType should be used for any parse item
      is: [ securedBySteroidsApiKey ]
      get:
        description: |
          {
            "action": "find"
          }
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName>> # e.g. car
      put:
        description: |
          {
            "action": "update"
          }
        body:
          application/json:
            schema: <<resourcePathName | !singularize>>
        responses:
          200:
            body:
              application/json:
                schema: <<resourcePathName>>
      delete:
        description: |
          {
            "action": "destroy"
          }
        responses:
          200:


/Size:
  description: |
    {
      "resourceName": "Size",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/User:
  description: |
    {
      "resourceName": "User",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/Appointment:
  description: |
    {
      "resourceName": "Appointment",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member

/Retailer:
  description: |
    {
      "resourceName": "Retailer",
      "identifierKey": "objectId"
    }
  type: parse_collection
  /{id}:
    type: parse_member


